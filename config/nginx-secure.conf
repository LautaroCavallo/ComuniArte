# nginx.conf - Protección OWASP Top 10 + CVE
server {
    listen 80;
    server_name comuniarte.local;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name comuniarte.local;

    # SSL Configuration - Protección CVE-2014-0160 (Heartbleed)
    ssl_certificate /etc/ssl/certs/comuniarte.crt;
    ssl_certificate_key /etc/ssl/private/comuniarte.key;
    ssl_protocols TLSv1.2 TLSv1.3;  # Evitar TLS 1.0/1.1 (CVE múltiples)
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;  # Protección CVE-2016-9244

    # Security Headers - OWASP A05:2021 Security Misconfiguration
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Rate Limiting - OWASP A04:2021 Insecure Design
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=2r/s;

    # WAF Rules - Protección contra ataques comunes
    location ~* \.(php|asp|aspx|jsp)$ {
        return 444;  # Bloquear ejecución de scripts
    }

    location ~* /(admin|wp-admin|administrator|phpmyadmin|pma)/ {
        return 444;  # Bloquear rutas de administración comunes
    }

    # Backend API - OWASP A01:2021 Broken Access Control
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # IP Whitelist para APIs sensibles
        location /api/admin/ {
            allow 192.168.1.0/24;  # Solo IPs locales
            allow 10.0.0.0/8;      # Red interna
            deny all;
        }
        
        # Headers de seguridad específicos para API
        add_header X-API-Version "1.0" always;
        add_header X-Request-ID $request_id always;
        
        proxy_pass http://backend:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Timeouts para prevenir DoS
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
    }

    # Authentication endpoints - Rate limiting estricto
    location /api/auth/ {
        limit_req zone=auth burst=5 nodelay;
        
        # Bloquear intentos de fuerza bruta
        if ($request_method = POST) {
            limit_req zone=auth burst=3 nodelay;
        }
        
        proxy_pass http://backend:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # MongoDB - Solo desarrollo, restricción estricta
    location /mongodb/ {
        allow 192.168.1.0/24;  # Solo IPs locales
        allow 127.0.0.1;       # Localhost
        deny all;
        
        # Bloquear métodos peligrosos
        if ($request_method !~ ^(GET|POST)$) {
            return 405;
        }
        
        proxy_pass http://mongodb:27017/;
    }

    # Neo4j Browser - Restricción por IP y autenticación
    location /neo4j/ {
        allow 192.168.1.0/24;  # Solo IPs locales
        deny all;
        
        # Bloquear consultas peligrosas
        location ~* /neo4j/.*(DROP|DELETE|REMOVE|CREATE.*INDEX) {
            return 403;
        }
        
        proxy_pass http://neo4j:7474/;
    }

    # MinIO Console - Restricción estricta
    location /minio/ {
        allow 192.168.1.0/24;  # Solo IPs locales
        deny all;
        
        # Bloquear acceso a buckets sensibles
        location ~* /minio/.*(backup|logs|secrets)/ {
            return 403;
        }
        
        proxy_pass http://minio:9001/;
    }

    # Redis Commander - Solo desarrollo
    location /redis/ {
        allow 192.168.1.0/24;  # Solo IPs locales
        deny all;
        
        # Bloquear comandos peligrosos
        location ~* /redis/.*(FLUSHALL|FLUSHDB|CONFIG) {
            return 403;
        }
        
        proxy_pass http://redis-commander:8081/;
    }

    # Bloquear archivos sensibles - OWASP A05:2021 Security Misconfiguration
    location ~* \.(env|log|conf|ini|bak|backup|old|tmp|temp)$ {
        return 444;
    }

    # Bloquear directorios sensibles
    location ~* /(\.git|\.svn|\.env|logs|backup|temp)/ {
        return 444;
    }

    # Protección contra Directory Traversal - OWASP A01:2021
    location ~* \.\./ {
        return 444;
    }

    # Bloquear User-Agents maliciosos
    if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
        return 444;
    }

    # Bloquear requests con headers sospechosos
    if ($http_x_forwarded_for ~* (127\.0\.0\.1|localhost)) {
        return 444;
    }
}
